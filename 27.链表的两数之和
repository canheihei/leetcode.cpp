/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* head=nullptr;
        ListNode* tail=nullptr;
        int carry=0;
        int val1=0;
        int val2=0;
        int sum=0;
        while(l1||l2)
        {
            if(l1)
            {
                val1=l1->val;
            }
            else
            {
                val1=0;
            }
            if(l2)
            {
                val2=l2->val;
            }
            else
            {
                val2=0;
            }
            sum=val1+val2+carry;
            if(sum>=10)
            {
                sum-=10;
                carry=1;
            }
            else
            {
                carry=0;
            }
            if(head==nullptr)
            {
                head=tail=new ListNode(sum);
            }
            else
            {
                tail->next=new ListNode(sum);
                tail=tail->next;
            }
            if(l1)
            {
                l1=l1->next;
            }
            if(l2)
            {
                l2=l2->next;
            }
        }
        if(carry==1)
        {
            tail->next=new ListNode(carry);
        }
        return head;
    }
};
